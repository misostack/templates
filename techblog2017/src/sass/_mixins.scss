%clearfix {
    *zoom: 1;
    &:before, &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
}
// Usage
//.container-with-floated-children {
//    @extend %clearfix;
//}

@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {        
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }    
    } 
    @else {
        padding-top: $padding;
    }
}
// Usage
// div { @include responsive-ratio(16,9); }

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) { 
    @font-face {
      font-family: quote($font-name);
      src: url($file-name + '.eot');
      src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
           url($file-name + '.woff') format('woff'),
           url($file-name + '.ttf')  format('truetype'),
           url($file-name + '.svg##{$font-name}')  format('svg');
      font-weight: $weight;
      font-style: $style;
    }
}
// Usage
// @include font-face('gotham', '/fonts/gotham');

// Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}
// Usage
// @include padding(1px, null, 3px, 4px);
// @include margin(1px, 2px, null, 4px);